name: Slack Notify

on:
  workflow_dispatch:
    inputs:
      payload:
        description: "Slack通知の内容（title, mentions: [GitHub ID...], content）"
        required: true
        type: string

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (to get user_mapping.csv)
        uses: actions/checkout@v4

      - name: Parse Slack Payload
        id: parse
        run: |
          echo '${{ inputs.payload }}' > payload.json
          echo "TITLE=$(jq -r .title payload.json)" >> $GITHUB_OUTPUT
          echo "CONTENT=$(jq -r .content payload.json)" >> $GITHUB_OUTPUT

      - name: Map GitHub IDs to Slack IDs
        id: map
        run: |
          GITHUB_IDS=$(jq -r '.mentions[]' payload.json)
          SLACK_MENTIONS=""

          while IFS= read -r GITHUB_ID; do
            SLACK_ID=$(awk -F',' -v id="$GITHUB_ID" '$1 == id {print $2}' ./data/user_mapping.csv)
            if [ -n "$SLACK_ID" ]; then
              SLACK_MENTIONS+="<@$SLACK_ID> "
            fi
          done <<< "$GITHUB_IDS"

          echo "MENTIONS=$SLACK_MENTIONS" >> $GITHUB_OUTPUT

      - name: Format Slack Payload
        id: format
        run: |
          BODY=$(cat <<EOF
          *${{ steps.parse.outputs.TITLE }}*
          ${{ steps.map.outputs.MENTIONS }}

          ${{ steps.parse.outputs.CONTENT }}
          EOF
          )

          ESCAPED_BODY="${BODY//$'\n'/\\n}"
          echo "payload={\"text\":\"${ESCAPED_BODY}\"}" >> $GITHUB_OUTPUT

      - name: Send to Slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: ${{ steps.format.outputs.payload }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TANUKI_BOX_WEBHOOK_URL }}
